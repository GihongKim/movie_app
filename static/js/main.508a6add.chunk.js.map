{"version":3,"sources":["movie.js","App.js","reportWebVitals.js","index.js"],"names":["MoviePoster","poster","alt","src","title","className","MovieGenre","genre","prototype","PropTypes","string","isRequired","Movie","genres","synopsis","map","index","App","_renderMovies","state","movies","movie","medium_cover_image","summary","id","_getMovies","a","_callApi","setState","fetch","then","res","json","data","catch","err","console","log","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAmDA,SAASA,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IAC7B,OACE,qBAAKC,IAAKF,EAAQC,IAAKA,EAAKE,MAAOF,EAAKG,UAAU,iBAItD,SAASC,EAAT,GAAgC,IAAVC,EAAS,EAATA,MACpB,OAAO,sBAAMF,UAAU,eAAhB,SAAgCE,IAezCD,EAAWE,UAAY,CACrBD,MAAOE,IAAUC,OAAOC,YAGXC,MAxDf,YAAqD,IAApCR,EAAmC,EAAnCA,MAAOH,EAA4B,EAA5BA,OAAQY,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACtC,OACE,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAACL,EAAD,CAAaC,OAAQA,EAAQC,IAAKE,MAEpC,sBAAKC,UAAU,gBAAf,UACE,mCAAMD,KACN,qBAAKC,UAAU,eAAf,SACGQ,EAAOE,KAAI,SAACR,EAAOS,GAAR,OACV,cAACV,EAAD,CAAYC,MAAOA,GAAYS,QAGnC,mBAAGX,UAAU,iBAAb,SAA+BS,WC2CxBG,E,kDAnEb,aAAe,IAAD,8BACZ,gBAYFC,cAAgB,WAYd,OAXe,EAAKC,MAAMC,OAAOL,KAAI,SAACM,GACpC,OACE,cAAC,EAAD,CACEjB,MAAOiB,EAAMjB,MACbH,OAAQoB,EAAMC,mBAEdT,OAAQQ,EAAMR,OACdC,SAAUO,EAAME,SAFXF,EAAMG,QAnBL,EA4BdC,WA5Bc,sBA4BD,4BAAAC,EAAA,sEACU,EAAKC,WADf,OACLP,EADK,OAEX,EAAKQ,SAAS,CAAER,WAFL,2CA5BC,EAiCdO,SAAW,WACT,OAAOE,MACL,iEAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUA,EAAKC,KAAKb,UACzBc,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAvClB,EA8CdhB,MAAQ,GA5CNiB,QAAQC,IAAI,eAFA,E,gEA2CZC,KAAKb,e,+BAKG,IACAL,EAAWkB,KAAKnB,MAAhBC,OACR,OACE,qBAAKf,UAAWe,EAAS,MAAQ,cAAjC,SACGkB,KAAKnB,MAAMC,OAASkB,KAAKpB,gBAAkB,gB,GArDlCqB,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.508a6add.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./movie.css\";\r\n\r\n// class Movie extends Component {\r\n\r\n//     static propTypes ={\r\n//         title: PropTypes.string.isRequired,\r\n//         poster: PropTypes.string.isRequired\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <MoviePoster poster={this.props.poster} />\r\n//                 <h1> {this.props.title}</h1>\r\n//             </div>\r\n//             )\r\n//     }\r\n// }\r\n\r\nfunction Movie({ title, poster, genres, synopsis }) {\r\n  return (\r\n    <div className=\"Movie\">\r\n      <div className=\"Movie_Columns\">\r\n        <MoviePoster poster={poster} alt={title} />\r\n      </div>\r\n      <div className=\"Movie_Columns\">\r\n        <h1> {title}</h1>\r\n        <div className=\"Movie_Genres\">\r\n          {genres.map((genre, index) => (\r\n            <MovieGenre genre={genre} key={index} />\r\n          ))}\r\n        </div>\r\n        <p className=\"Movie_Synopsis\">{synopsis}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class MoviePoster extends Component {\r\n\r\n//     static propTypes = {\r\n//         poster:PropTypes.string.isRequired\r\n//     }\r\n\r\n//     render() {\r\n//         return (<img src={this.props.poster} alt=\"movie Poster\"></img>)\r\n//     }\r\n// }\r\n\r\nfunction MoviePoster({ poster, alt }) {\r\n  return (\r\n    <img src={poster} alt={alt} title={alt} className=\"Movie_Poster\"></img>\r\n  );\r\n}\r\n\r\nfunction MovieGenre({ genre }) {\r\n  return <span className=\"Movie_Genres\">{genre}</span>;\r\n}\r\n\r\nMovie.propTypes = {\r\n  poster: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  genres: PropTypes.array.isRequired,\r\n  synopsis: PropTypes.string.isRequired,\r\n};\r\n\r\nMoviePoster.propTypes = {\r\n  poster: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieGenre.prototype = {\r\n  genre: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Movie from \"./movie\";\n\n// const movies = [\n//   {id:0, title:\"Matrix\", poster : 'https://nerdist.com/wp-content/uploads/2019/08/matrix-keanue-reeves-759.jpg'},\n//   {id:1, title:\"Full Metal Jacket\", poster :\"https://upload.wikimedia.org/wikipedia/en/3/39/The_Hunger_Games_cover.jpg\"}\n// ]\n\nclass App extends Component {\n  constructor() {\n    super();\n    console.log(\"Constructor\");\n  }\n\n  // state = {\n  //   greeting: \"Hello\",\n  //   movies: [\n  //     {id:0, title:\"Matrix\", poster : 'https://nerdist.com/wp-content/uploads/2019/08/matrix-keanue-reeves-759.jpg'},\n  //     {id:1, title:\"Full Metal Jacket\", poster :\"https://upload.wikimedia.org/wikipedia/en/3/39/The_Hunger_Games_cover.jpg\"}\n  //   ]\n  // }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map((movie) => {\n      return (\n        <Movie\n          title={movie.title}\n          poster={movie.medium_cover_image}\n          key={movie.id}\n          genres={movie.genres}\n          synopsis={movie.summary}\n        />\n      );\n    });\n    return movies;\n  };\n\n  _getMovies = async () => {\n    const movies = await this._callApi();\n    this.setState({ movies });\n  };\n\n  _callApi = () => {\n    return fetch(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=rating&limit=5\"\n    )\n      .then((res) => res.json())\n      .then((json) => json.data.movies)\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this._getMovies();\n  }\n\n  state = {};\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className={movies ? \"App\" : \"App-loading\"}>\n        {this.state.movies ? this._renderMovies() : \"Loading\"}\n      </div>\n\n      // <div className=\"App\">\n      //   {this.state.greeting}\n      // {this.state.movies.map((movie, index)=>{return <Movie title={movie.title} poster={movie.poster} key={index} />})}\n      // </div>\n    );\n  }\n\n  // componentDidMount() {\n  //   console.log('componentDidMount')\n  // }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}